USE evidx
CREATE TABLE KnowledgeBase (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, permissions VARCHAR(255), buildscript MEDIUMTEXT, isRoot BOOL, namespace VARCHAR(255), build LONGBLOB, jar LONGBLOB, groupId VARCHAR(255), artifactId VARCHAR(255), version VARCHAR(255), primary key (vpdmfId));
CREATE TABLE VpdmfUser (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, Name VARCHAR(255), email VARCHAR(255), login VARCHAR(255), password VARCHAR(255), vpdmfLabel VARCHAR(255), indexTuple MEDIUMTEXT, vpdmfUri VARCHAR(255), primary key (vpdmfId));
CREATE TABLE ViewTable (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, viewType VARCHAR(255), locked BOOL, vpdmfLabel MEDIUMTEXT, vpdmfUri VARCHAR(255), namespace VARCHAR(255), thumbnail LONGBLOB, indexTuple MEDIUMTEXT, primary key (vpdmfId));
CREATE TABLE Keyword (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, value VARCHAR(255), primary key (vpdmfId));
CREATE TABLE VpdmfUserRole (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, role VARCHAR(255), user_id BIGINT, INDEX user_id_idx (user_id), FOREIGN KEY (user_id) REFERENCES VpdmfUser(vpdmfId), primary key (vpdmfId));
CREATE TABLE ViewLinkTable (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, linkType VARCHAR(255), vpdmfLabel MEDIUMTEXT, indexTuple MEDIUMTEXT, vpdmfUri VARCHAR(255), from_id BIGINT, INDEX from_id_idx (from_id), FOREIGN KEY (from_id) REFERENCES ViewTable(vpdmfId), to_id BIGINT, INDEX to_id_idx (to_id), FOREIGN KEY (to_id) REFERENCES ViewTable(vpdmfId), primary key (vpdmfId));
CREATE TABLE Journal (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), journalTitle VARCHAR(255), nlmId VARCHAR(255), abbr VARCHAR(255), ISSN VARCHAR(255), primary key (vpdmfId));
CREATE TABLE Ontology (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), fullName VARCHAR(255), shortName VARCHAR(255), displayName VARCHAR(255), description VARCHAR(255), ns VARCHAR(255), primary key (vpdmfId));
CREATE TABLE FTDRuleSet (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), rsName VARCHAR(255), rsDescription VARCHAR(255), fileName VARCHAR(255), filePath VARCHAR(255), fileType VARCHAR(255), primary key (vpdmfId));
CREATE TABLE ConferenceProceedingsCitation (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), name VARCHAR(255), location VARCHAR(255), date VARCHAR(255), publisher VARCHAR(255), nthConference INT, primary key (vpdmfId));
CREATE TABLE Person (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), initials VARCHAR(255), surname VARCHAR(255), email VARCHAR(255), affiliation VARCHAR(255), primary key (vpdmfId));
CREATE TABLE LiteratureCitation (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), abstractText MEDIUMTEXT, title MEDIUMTEXT, pubYear INT, pages VARCHAR(255), resourceType VARCHAR(255), primary key (vpdmfId));
CREATE TABLE Corpus (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), name VARCHAR(255), description VARCHAR(255), owner VARCHAR(255), regex VARCHAR(255), date VARCHAR(255), corpusType VARCHAR(255), primary key (vpdmfId));
CREATE TABLE Term (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), localDefinition BOOL, termValue VARCHAR(255), shortTermId VARCHAR(255), fullTermURI VARCHAR(255), definition VARCHAR(255), termType VARCHAR(255), ontology_id BIGINT, INDEX ontology_id_idx (ontology_id), FOREIGN KEY (ontology_id) REFERENCES Ontology(vpdmfId), primary key (vpdmfId));
CREATE TABLE JournalEpoch (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), startVol INT, endVol INT, ruleFile MEDIUMTEXT, ruleFileName VARCHAR(255), rules_id BIGINT, INDEX rules_id_idx (rules_id), FOREIGN KEY (rules_id) REFERENCES FTDRuleSet(vpdmfId), journal_id BIGINT, INDEX journal_id_idx (journal_id), FOREIGN KEY (journal_id) REFERENCES Journal(vpdmfId), primary key (vpdmfId));
CREATE TABLE TerminologyCurator (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES Person(vpdmfId), primary key (vpdmfId));
CREATE TABLE Author (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES Person(vpdmfId), primary key (vpdmfId));
CREATE TABLE ID (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, idValue VARCHAR(255), idType VARCHAR(255), publication_id BIGINT, INDEX publication_id_idx (publication_id), FOREIGN KEY (publication_id) REFERENCES LiteratureCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE Keyword_keywordList__resource_LiteratureCitation (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, keywordList_id BIGINT, INDEX keywordList_id_idx (keywordList_id), FOREIGN KEY (keywordList_id) REFERENCES Keyword(vpdmfId), resource_id BIGINT, INDEX resource_id_idx (resource_id), FOREIGN KEY (resource_id) REFERENCES LiteratureCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE URL (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, url VARCHAR(255), resource_id BIGINT, INDEX resource_id_idx (resource_id), FOREIGN KEY (resource_id) REFERENCES LiteratureCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE FTD (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), checksum VARCHAR(255), name VARCHAR(255), pdfLoaded BOOL, pmcXmlFile VARCHAR(255), pmcLoaded BOOL, laswfFile VARCHAR(255), swfLoaded BOOL, xmlFile VARCHAR(255), xmlLoaded BOOL, ruleSet_id BIGINT, INDEX ruleSet_id_idx (ruleSet_id), FOREIGN KEY (ruleSet_id) REFERENCES FTDRuleSet(vpdmfId), citation_id BIGINT, INDEX citation_id_idx (citation_id), FOREIGN KEY (citation_id) REFERENCES LiteratureCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE BookCitation (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES LiteratureCitation(vpdmfId), city VARCHAR(255), publisher VARCHAR(255), edition VARCHAR(255), primary key (vpdmfId));
CREATE TABLE ConferencePresentationCitation (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES LiteratureCitation(vpdmfId), code VARCHAR(255), proceedings_id BIGINT, INDEX proceedings_id_idx (proceedings_id), FOREIGN KEY (proceedings_id) REFERENCES ConferenceProceedingsCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE ArticleCitation (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES LiteratureCitation(vpdmfId), volume VARCHAR(255), volValue INT, issue VARCHAR(255), pmid INT, pmcid INT, journal_id BIGINT, INDEX journal_id_idx (journal_id), FOREIGN KEY (journal_id) REFERENCES Journal(vpdmfId), primary key (vpdmfId));
CREATE TABLE ThesisCitation (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES LiteratureCitation(vpdmfId), university VARCHAR(255), qualification VARCHAR(255), primary key (vpdmfId));
CREATE TABLE Corpus_corpora__resources_LiteratureCitation (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, corpora_id BIGINT, INDEX corpora_id_idx (corpora_id), FOREIGN KEY (corpora_id) REFERENCES Corpus(vpdmfId), resources_id BIGINT, INDEX resources_id_idx (resources_id), FOREIGN KEY (resources_id) REFERENCES LiteratureCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE TermMapping (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, AUTOMATIC VARCHAR(255), ETC VARCHAR(255), relation_id BIGINT, INDEX relation_id_idx (relation_id), FOREIGN KEY (relation_id) REFERENCES Term(vpdmfId), source_id BIGINT, INDEX source_id_idx (source_id), FOREIGN KEY (source_id) REFERENCES Term(vpdmfId), target_id BIGINT, INDEX target_id_idx (target_id), FOREIGN KEY (target_id) REFERENCES Term(vpdmfId), primary key (vpdmfId));
CREATE TABLE Term_definedTerm__definitionEditor_TerminologyCurator (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, definedTerm_id BIGINT, INDEX definedTerm_id_idx (definedTerm_id), FOREIGN KEY (definedTerm_id) REFERENCES Term(vpdmfId), definitionEditor_id BIGINT, INDEX definitionEditor_id_idx (definitionEditor_id), FOREIGN KEY (definitionEditor_id) REFERENCES TerminologyCurator(vpdmfId), primary key (vpdmfId));
CREATE TABLE Author_authorList__publishedWork_LiteratureCitation (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, vpdmfOrder INT, authorList_id BIGINT, INDEX authorList_id_idx (authorList_id), FOREIGN KEY (authorList_id) REFERENCES Author(vpdmfId), publishedWork_id BIGINT, INDEX publishedWork_id_idx (publishedWork_id), FOREIGN KEY (publishedWork_id) REFERENCES LiteratureCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE FTDFragment (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES ViewTable(vpdmfId), frgOrder VARCHAR(25), frgType VARCHAR(25), ftd_id BIGINT, INDEX ftd_id_idx (ftd_id), FOREIGN KEY (ftd_id) REFERENCES FTD(vpdmfId), primary key (vpdmfId));
CREATE TABLE BookChapterCitation (vpdmfId BIGINT NOT NULL, INDEX vpdmfId_idx (vpdmfId), FOREIGN KEY (vpdmfId) REFERENCES LiteratureCitation(vpdmfId), number VARCHAR(255), book_id BIGINT, INDEX book_id_idx (book_id), FOREIGN KEY (book_id) REFERENCES BookCitation(vpdmfId), primary key (vpdmfId));
CREATE TABLE FTDFragmentBlock (vpdmfId BIGINT NOT NULL AUTO_INCREMENT, p INT, x1 INT, y1 INT, x2 INT, y2 INT, x3 INT, y3 INT, x4 INT, y4 INT, text MEDIUMTEXT, code VARCHAR(25), element VARCHAR(25), vpdmfOrder INT, fragment_id BIGINT, INDEX fragment_id_idx (fragment_id), FOREIGN KEY (fragment_id) REFERENCES FTDFragment(vpdmfId), primary key (vpdmfId));
ALTER TABLE Keyword_keywordList__resource_LiteratureCitation  ADD UNIQUE Keyword_keywordList__resource_LiteratureCitation_idx (keywordList_id, resource_id);
ALTER TABLE Corpus_corpora__resources_LiteratureCitation  ADD UNIQUE Corpus_corpora__resources_LiteratureCitation_idx (corpora_id, resources_id);
ALTER TABLE Term_definedTerm__definitionEditor_TerminologyCurator  ADD UNIQUE Term_definedTerm__definitionEditor_TerminologyCurator_idx (definedTerm_id, definitionEditor_id);
ALTER TABLE Author_authorList__publishedWork_LiteratureCitation  ADD UNIQUE Author_authorList__publishedWork_LiteratureCitation_idx (authorList_id, publishedWork_id);
CREATE INDEX IDX__login ON VpdmfUser(login(50));
CREATE INDEX IDX__vpdmfLabel ON ViewTable(vpdmfLabel(50));
CREATE INDEX IDX__linkType ON ViewLinkTable(linkType(50));
CREATE INDEX IDX__abbr ON Journal(abbr(50));
CREATE INDEX IDX__shortName ON Ontology(shortName(50));
CREATE INDEX IDX__rsName ON FTDRuleSet(rsName(50));
CREATE INDEX IDX__fileName ON FTDRuleSet(fileName(50));
CREATE INDEX IDX__name ON ConferenceProceedingsCitation(name(50));
CREATE INDEX IDX__location ON ConferenceProceedingsCitation(location(50));
CREATE INDEX IDX__date ON ConferenceProceedingsCitation(date(50));
CREATE INDEX IDX__publisher ON ConferenceProceedingsCitation(publisher(50));
CREATE INDEX IDX__initials ON Person(initials(50));
CREATE INDEX IDX__surname ON Person(surname(50));
CREATE INDEX IDX__email ON Person(email(50));
CREATE INDEX IDX__title ON LiteratureCitation(title(50));
CREATE INDEX IDX__pubYear ON LiteratureCitation(pubYear);
CREATE INDEX IDX__pages ON LiteratureCitation(pages(50));
CREATE INDEX IDX__name ON Corpus(name(50));
CREATE INDEX IDX__termValue ON Term(termValue(50));
CREATE INDEX IDX__shortTermId ON Term(shortTermId(50));
CREATE INDEX IDX__startVol ON JournalEpoch(startVol);
CREATE INDEX IDX__endVol ON JournalEpoch(endVol);
CREATE INDEX IDX__idValue ON ID(idValue(50));
CREATE INDEX IDX__idType ON ID(idType(50));
CREATE INDEX IDX__checksum ON FTD(checksum(50));
CREATE INDEX IDX__name ON FTD(name(50));
CREATE INDEX IDX__pdfLoaded ON FTD(pdfLoaded);
CREATE INDEX IDX__pmcLoaded ON FTD(pmcLoaded);
CREATE INDEX IDX__swfLoaded ON FTD(swfLoaded);
CREATE INDEX IDX__xmlLoaded ON FTD(xmlLoaded);
CREATE INDEX IDX__city ON BookCitation(city(50));
CREATE INDEX IDX__publisher ON BookCitation(publisher(50));
CREATE INDEX IDX__edition ON BookCitation(edition(50));
CREATE INDEX IDX__volume ON ArticleCitation(volume(50));
CREATE UNIQUE INDEX IDX__pmid ON ArticleCitation(pmid);
CREATE INDEX IDX__university ON ThesisCitation(university(50));
CREATE INDEX IDX__qualification ON ThesisCitation(qualification(50));
CREATE INDEX IDX__frgOrder ON FTDFragment(frgOrder);
CREATE INDEX IDX__frgType ON FTDFragment(frgType);
CREATE INDEX IDX__p ON FTDFragmentBlock(p);
CREATE INDEX IDX__x1 ON FTDFragmentBlock(x1);
CREATE INDEX IDX__y1 ON FTDFragmentBlock(y1);
CREATE INDEX IDX__x2 ON FTDFragmentBlock(x2);
CREATE INDEX IDX__y2 ON FTDFragmentBlock(y2);
CREATE INDEX IDX__x3 ON FTDFragmentBlock(x3);
CREATE INDEX IDX__y3 ON FTDFragmentBlock(y3);
CREATE INDEX IDX__x4 ON FTDFragmentBlock(x4);
CREATE INDEX IDX__y4 ON FTDFragmentBlock(y4);
CREATE INDEX IDX__text ON FTDFragmentBlock(text(50));
CREATE INDEX IDX__code ON FTDFragmentBlock(code);

create table users (username varchar(50) not null primary key, password varchar(50) not null,enabled boolean not null);
create table authorities (username varchar(50) not null,authority varchar(50) not null,foreign key (username) references users (username),unique index authorities_idx_1 (username, authority));
create table groups (id bigint unsigned not null auto_increment primary key,group_name varchar(50) not null);
create table group_authorities (group_id bigint unsigned not null,authority varchar(50) not null,foreign key (group_id) references groups (id));
create table group_members (id bigint unsigned not null auto_increment primary key,username varchar(50) not null,group_id bigint unsigned not null,foreign key (group_id) references groups (id));
create table persistent_logins (username varchar(64) not null,series varchar(64) primary key,token varchar(64) not null,last_used timestamp not null);
